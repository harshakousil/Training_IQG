
package cards;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CardDeckSessionBean", targetNamespace = "http://ejbs/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CardDeckSessionBean {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createDeck", targetNamespace = "http://ejbs/", className = "cards.CreateDeck")
    @ResponseWrapper(localName = "createDeckResponse", targetNamespace = "http://ejbs/", className = "cards.CreateDeckResponse")
    @Action(input = "http://ejbs/CardDeckSessionBean/createDeckRequest", output = "http://ejbs/CardDeckSessionBean/createDeckResponse")
    public Integer createDeck(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "shuffleDeck", targetNamespace = "http://ejbs/", className = "cards.ShuffleDeck")
    @ResponseWrapper(localName = "shuffleDeckResponse", targetNamespace = "http://ejbs/", className = "cards.ShuffleDeckResponse")
    @Action(input = "http://ejbs/CardDeckSessionBean/shuffleDeckRequest", output = "http://ejbs/CardDeckSessionBean/shuffleDeckResponse")
    public boolean shuffleDeck(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listDeckIds", targetNamespace = "http://ejbs/", className = "cards.ListDeckIds")
    @ResponseWrapper(localName = "listDeckIdsResponse", targetNamespace = "http://ejbs/", className = "cards.ListDeckIdsResponse")
    @Action(input = "http://ejbs/CardDeckSessionBean/listDeckIdsRequest", output = "http://ejbs/CardDeckSessionBean/listDeckIdsResponse")
    public List<Integer> listDeckIds();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDeck", targetNamespace = "http://ejbs/", className = "cards.DeleteDeck")
    @ResponseWrapper(localName = "deleteDeckResponse", targetNamespace = "http://ejbs/", className = "cards.DeleteDeckResponse")
    @Action(input = "http://ejbs/CardDeckSessionBean/deleteDeckRequest", output = "http://ejbs/CardDeckSessionBean/deleteDeckResponse")
    public boolean deleteDeck(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns cards.StackType
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeck", targetNamespace = "http://ejbs/", className = "cards.GetDeck")
    @ResponseWrapper(localName = "getDeckResponse", targetNamespace = "http://ejbs/", className = "cards.GetDeckResponse")
    @Action(input = "http://ejbs/CardDeckSessionBean/getDeckRequest", output = "http://ejbs/CardDeckSessionBean/getDeckResponse")
    public StackType getDeck(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
