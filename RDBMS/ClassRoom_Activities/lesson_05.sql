REM -- GROUP FUNCTIONS


SELECT ROUND(AVG(SALARY)) AS AV_SALARY,MAX(SALARY),MIN(SALARY),SUM(SALARY)
FROM EMPLOYEES
WHERE JOB_ID LIKE '%REP';


REM --GROUP FUNCTION ON DATE

SELECT MIN(HIRE_DATE), MAX(HIRE_DATE)
FROM EMPLOYEES;

REM -- USING COUNT FUNCTION
REM -- COUNT FUNCTION RETURN THE COUNT OF NOT NULL VALUES

SELECT COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID=20;


SELECT COUNT(COMMISSION_PCT)
FROM EMPLOYEES
WHERE DEPARTMENT_ID=50;


SELECT COUNT(DISTINCT DEPARTMENT_ID)
FROM EMPLOYEES;

REM--GROUP FUNCTIONS IGNORE NULL VALUES SO THERE IS A VARIATION IN GROUP FUNCTIONS
SELECT AVG(COMMISSION_PCT)
FROM EMPLOYEES;
REM-- SO SOLUTION IS TO USE NVL FUNCTION

SELECT AVG(NVL(COMMISSION_PCT,0))
FROM EMPLOYEES;

REM-- GROUPBY CLUASE
REM-- GROUP BY  COLUMN NEED NOT TO BE PART OF SELECT STATEMENT
SELECT DEPARTMENT_ID,ROUND(AVG(SALARY))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;


REM --GROUP BY MULTIPLE COLUMNS

SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID,JOB_ID;

REM --GROUP BY MULTIPLE COLUMNS WITH ORDER BY

SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID,JOB_ID
ORDER BY DEPARTMENT_ID;

REM -- HAVING CLUASE

SELECT DEPARTMENT_ID,MAX(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MAX(SALARY)>10000
ORDER BY DEPARTMENT_ID;


REM --NESTING IN GROUP FUNCTION

SELECT MAX(AVG(SALARY))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;
